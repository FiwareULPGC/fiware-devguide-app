var restaurantsAPI = require('../js/restaurantsAPI.js');
var AJAXRequest = require('../js/AJAXRequest.js');
var chai = require('chai');
var assert = require('chai').assert;

var jsdom = require("jsdom").jsdom;
//global.L = require('../addons/leaflet/leaflet.js');
require('mocha-jsdom');


chai.should();


var restaurantsJSON = [{
        "@context": "http://schema.org",
        "@type": "Restaurant1",
        "additionalProperty":
        [
            {
                "value": 10,
                "name": "capacity",
                "@type": "PropertyValue"
            },
            {
                "value": 1,
                "name": "occupancyLevels",
                "@type": "PropertyValue",
                "timestamp": "2016-05-31T06:52:18.169Z"
            }
        ],
        "address":
        {
            "streetAddress": "Street 1",
            "addressRegion": "Region 1",
            "addressLocality": "Locality 1",
            "postalCode": "11111",
            "@type": "PostalAddress"
        },
        "aggregateRating":
        {
            "reviewCount": 1,
            "ratingValue": 1
        },
        "department": "Franchise1",
        "description": "Restaurant description 1",
        "geo":
        {
            "@type": "GeoCoordinates",
            "latitude": "42.8404625",
            "longitude": "-2.5123277"
        },
        "name": "Retaurant1",
        "priceRange": 1,
        "telephone": "111 111 111"
    },
    {
        "@context": "http://schema.org",
        "@type": "Restaurant",
        "additionalProperty":
        [
            {
                "value": 20,
                "name": "capacity",
                "@type": "PropertyValue"
            },
            {
                "value": 2,
                "name": "occupancyLevels",
                "@type": "PropertyValue",
                "timestamp": "2016-05-31T06:52:18.169Z"
            }
        ],
        "address":
        {
            "streetAddress": "Street 2",
            "addressRegion": "Region 2",
            "addressLocality": "Locality 2",
            "postalCode": "22222",
            "@type": "PostalAddress"
        },
        "aggregateRating":
        {
            "reviewCount": 2,
            "ratingValue": 2
        },
        "department": "Franchise2",
        "description": "Restaurant description 2",
        "geo":
        {
            "@type": "GeoCoordinates",
            "latitude": "42.8538811",
            "longitude": "-2.7006836"
        },
        "name": "Restaurant2",
        "priceRange": 2,
        "telephone": "222 222 222",
        "url": "http://www.restaurant2.com/"
    }
];


describe('Testing restaurant requests', function () {
  before(function() {
    //global.XMLHttpRequest = require("xmlhttprequest").XMLHttpRequest;
    global.XMLHttpRequest = sinon.useFakeXMLHttpRequest();
  })

  after(function() {
    delete global.XMLHttpRequest;
  })

  beforeEach(function() {
    this.xhr = sinon.useFakeXMLHttpRequest();

    this.requests = [];
    this.xhr.onCreate = function(xhr) {
      this.requests.push(xhr);
    }.bind(this);

    var doc = jsdom("<html><head></head>"+
          "<body>"+
            "<div class='container-fluid'>"+
              "<div id='map'></div>" +
            "</div>"+
            "</body></html>", {});
      global.window = doc.defaultView;
      global.document = window.document;
      global.navigator = {
            userAgent: 'nodejs'
          }
      global.L = require('leaflet');
      require('../addons/leaflet/leaflet.markercluster.js');
    /*global.map = L.map('map').setView([42.90816007196054, -2.52960205078125], 8);
    //console.log("MEGADEBUG:")
    //console.log("map",map);
    L.tileLayer('http://{s}.tile.osm.org/{z}/{x}/{y}.png', {
    attribution:
        '&copy; <a href="http://osm.org/copyright">' +
        'OpenStreetMap</a> contributors'
  }).addTo(map);*/
  });

  afterEach(function() {
    this.xhr.restore();
  });


    it('Get all restaurants', function(done) {
        this.timeout(15000);
         global.map = L.map('map').setView([42.90816007196054, -2.52960205078125], 8);

    //console.log("MEGADEBUG:")
    //console.log("map",map);
    L.tileLayer('http://{s}.tile.osm.org/{z}/{x}/{y}.png', {
    attribution:
        '&copy; <a href="http://osm.org/copyright">' +
        'OpenStreetMap</a> contributors'
  }).addTo(map);
    window.map = map;
        var data = restaurantsJSON;
        var dataJson = JSON.stringify(data);

        console.log(document);
        restaurantsAPI.setMap(map);
        restaurantsAPI.getAllRestaurants();
        this.requests[0].respond(200, { 'Content-Type': 'text/json' }, dataJson);

        //
        /*
        var allMarkersObjArray = []; // for marker objects
        var called = 0; // for readable geoJson markers

        $.each(map._layers, function (ml) {

            if (map._layers[ml].feature) {

                allMarkersObjArray.push(this)
                allMarkersGeoJsonArray.push(JSON.stringify(this.toGeoJSON()))
            }
        })
      /*
      map._layers.forEach(function(current, index, array) {
        if (current.feature) {
              allMarkersObjArray.push(current);
      });
      */
       /* var count = 0;
        for (var i =0; i < map._layers; i++) {
          if (map._layers(i).feature) {
            count = count + 1;
          }
        }
        expect(count).to.be.equal(2);

        */
        var layerCount = 0;
        for (var layer_id in map._layers) {
        if (map._layers[layer_id]._childCount) {
            layerCount += map._layers[layer_id]._childCount;
        }
       // setTimeout(function () {expect(layerCount).to.be.equal(2); },300);
    }

    });
});



